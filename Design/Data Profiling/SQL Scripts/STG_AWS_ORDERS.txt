
SELECT cast(1 as integer) sno,'RK250076.STG_AWS_ORDERS' AS TABLE_NAME,
    CAST('Order_Id' AS varchar(255)) AS Attribute,
    COUNT(*) AS Total_Records,
   
        SUM(
    CASE
        WHEN Order_Id IS NULL OR CAST(Order_Id AS VARCHAR(400)) = 'NULL' OR CAST(Order_Id AS VARCHAR(400) )= '' THEN 1 ELSE 0
    END) AS  Count_Null_Records,
        SUM(
    CASE
        WHEN CAST(Order_Id AS VARCHAR(400))= '0' THEN 1 ELSE 0
    END) AS  ZeroCount,
        COUNT(DISTINCT Order_Id) AS  Count_Distinct_Records,
        COUNT(Order_Id) - COUNT(DISTINCT Order_Id)  AS  Count_Duplicates,
        MAX(LENGTH(CAST(Order_Id AS VARCHAR(400)))) AS  Max_Length,
        MIN(LENGTH(CAST(Order_Id AS VARCHAR(400)))) AS  Min_Length
    FROM RK250076.STG_AWS_ORDERS
    UNION ALL
         SELECT cast(2 as integer) sno, 'RK250076.STG_AWS_ORDERS' AS TABLE_NAME,
    CAST('Cust_Id' AS varchar(255)) AS Attribute,
    COUNT(*) AS Total_Records,
    
        SUM(
    CASE
        WHEN Cust_Id IS NULL OR CAST(Cust_Id AS VARCHAR(400)) = 'NULL' OR CAST(Cust_Id AS VARCHAR(400) )= '' THEN 1 ELSE 0
    END) AS  Count_Null_Records,
        SUM(
    CASE
        WHEN CAST(Cust_Id AS VARCHAR(400))= '0' THEN 1 ELSE 0
    END) AS  ZeroCount,
        COUNT(DISTINCT Cust_Id) AS  Count_Distinct_Records,
        COUNT(Cust_Id) - COUNT(DISTINCT Cust_Id)  AS  Count_Duplicates,
        MAX(LENGTH(CAST(Cust_Id AS VARCHAR(400)))) AS  Max_Length,
        MIN(LENGTH(CAST(Cust_Id AS VARCHAR(400)))) AS  Min_Length
    FROM RK250076.STG_AWS_ORDERS
        UNION ALL
    SELECT cast(3 as integer) sno,'RK250076.STG_AWS_ORDERS' AS TABLE_NAME,
    CAST('Order_Status' AS varchar(255)) AS Attribute,
    COUNT(*) AS Total_Records,
   
        SUM(
    CASE
        WHEN Order_Status IS NULL OR CAST(Order_Status AS VARCHAR(400)) = 'NULL' OR CAST(Order_Status AS VARCHAR(400) )= '' THEN 1 ELSE 0
    END) AS  Count_Null_Records,
        SUM(
    CASE
        WHEN CAST(Order_Status AS VARCHAR(400))= '0' THEN 1 ELSE 0
    END) AS  ZeroCount,
        COUNT(DISTINCT Order_Status) AS  Count_Distinct_Records,
        COUNT(Order_Status) - COUNT(DISTINCT Order_Status)  AS  Count_Duplicates,
        MAX(LENGTH(CAST(Order_Status AS VARCHAR(400)))) AS  Max_Length,
        MIN(LENGTH(CAST(Order_Status AS VARCHAR(400)))) AS  Min_Length
    FROM RK250076.STG_AWS_ORDERS
UNION ALL
SELECT cast(4 as integer) sno,'RK250076.STG_AWS_ORDERS' AS TABLE_NAME,
    CAST('Total_Price' AS varchar(255)) AS Attribute,
    COUNT(*) AS Total_Records,
   
        SUM(
    CASE
        WHEN Total_Price IS NULL OR CAST(Total_Price AS VARCHAR(400)) = 'NULL' OR CAST(Total_Price AS VARCHAR(400) )= '' THEN 1 ELSE 0
    END) AS  Count_Null_Records,
        SUM(
    CASE
        WHEN CAST(Total_Price AS VARCHAR(400))= '0' THEN 1 ELSE 0
    END) AS  ZeroCount,
        COUNT(DISTINCT Total_Price) AS  Count_Distinct_Records,
        COUNT(Total_Price) - COUNT(DISTINCT Total_Price)  AS  Count_Duplicates,
        MAX(LENGTH(CAST(Total_Price AS VARCHAR(400)))) AS  Max_Length,
        MIN(LENGTH(CAST(Total_Price AS VARCHAR(400)))) AS  Min_Length
    FROM RK250076.STG_AWS_ORDERS
    UNION ALL
    SELECT cast(5 as integer) sno,'RK250076.STG_AWS_ORDERS' AS TABLE_NAME,
    CAST('Order_Date' AS varchar(255)) AS Attribute,
    COUNT(*) AS Total_Records,
   
        SUM(
    CASE
        WHEN Order_Date IS NULL OR CAST(Order_Date AS VARCHAR(400)) = 'NULL' OR CAST(Order_Date AS VARCHAR(400) )= '' THEN 1 ELSE 0
    END) AS  Count_Null_Records,
        SUM(
    CASE
        WHEN CAST(Order_Date AS VARCHAR(400))= '0' THEN 1 ELSE 0
    END) AS  ZeroCount,
        COUNT(DISTINCT Order_Date) AS  Count_Distinct_Records,
        COUNT(Order_Date) - COUNT(DISTINCT Order_Date)  AS  Count_Duplicates,
        MAX(LENGTH(CAST(Order_Date AS VARCHAR(400)))) AS  Max_Length,
        MIN(LENGTH(CAST(Order_Date AS VARCHAR(400)))) AS  Min_Length
    FROM RK250076.STG_AWS_ORDERS
    UNION ALL
    
SELECT cast(6 as integer) sno,'RK250076.STG_AWS_ORDERS' AS TABLE_NAME,
    CAST('Order_Priority' AS varchar(255)) AS Attribute,
    COUNT(*) AS Total_Records,
   
        SUM(
    CASE
        WHEN Order_Priority IS NULL OR CAST(Order_Priority AS VARCHAR(400)) = 'NULL' OR CAST(Order_Priority AS VARCHAR(400) )= '' THEN 1 ELSE 0
    END) AS  Count_Null_Records,
        SUM(
    CASE
        WHEN CAST(Order_Priority AS VARCHAR(400))= '0' THEN 1 ELSE 0
    END) AS  ZeroCount,
        COUNT(DISTINCT Order_Priority) AS  Count_Distinct_Records,
        COUNT(Order_Priority) - COUNT(DISTINCT Order_Priority)  AS  Count_Duplicates,
        MAX(LENGTH(CAST(Order_Priority AS VARCHAR(400)))) AS  Max_Length,
        MIN(LENGTH(CAST(Order_Priority AS VARCHAR(400)))) AS  Min_Length
    FROM RK250076.STG_AWS_ORDERS
    UNION ALL
    SELECT cast(7 as integer) sno,'RK250076.STG_AWS_ORDERS' AS TABLE_NAME,
    CAST('Clerk' AS varchar(255)) AS Attribute,
    COUNT(*) AS Total_Records,
   
        SUM(
    CASE
        WHEN Clerk IS NULL OR CAST(Clerk AS VARCHAR(400)) = 'NULL' OR CAST(Clerk AS VARCHAR(400) )= '' THEN 1 ELSE 0
    END) AS  Count_Null_Records,
        SUM(
    CASE
        WHEN CAST(Clerk AS VARCHAR(400))= '0' THEN 1 ELSE 0
    END) AS  ZeroCount,
        COUNT(DISTINCT Clerk) AS  Count_Distinct_Records,
        COUNT(Clerk) - COUNT(DISTINCT Clerk)  AS  Count_Duplicates,
        MAX(LENGTH(CAST(Clerk AS VARCHAR(400)))) AS  Max_Length,
        MIN(LENGTH(CAST(Clerk AS VARCHAR(400)))) AS  Min_Length
    FROM RK250076.STG_AWS_ORDERS
    UNION ALL
    SELECT cast(8 as integer) sno,'RK250076.STG_AWS_ORDERS' AS TABLE_NAME,
    CAST('Store_Id' AS varchar(255)) AS Attribute,
    COUNT(*) AS Total_Records,
   
        SUM(
    CASE
        WHEN Store_Id IS NULL OR CAST(Store_Id AS VARCHAR(400)) = 'NULL' OR CAST(Store_Id AS VARCHAR(400) )= '' THEN 1 ELSE 0
    END) AS  Count_Null_Records,
        SUM(
    CASE
        WHEN CAST(Store_Id AS VARCHAR(400))= '0' THEN 1 ELSE 0
    END) AS  ZeroCount,
        COUNT(DISTINCT Store_Id) AS  Count_Distinct_Records,
        COUNT(Store_Id) - COUNT(DISTINCT Store_Id)  AS  Count_Duplicates,
        MAX(LENGTH(CAST(Store_Id AS VARCHAR(400)))) AS  Max_Length,
        MIN(LENGTH(CAST(Store_Id AS VARCHAR(400)))) AS  Min_Length
    FROM RK250076.STG_AWS_ORDERS
    UNION ALL
    SELECT cast(9 as integer) sno,'RK250076.STG_AWS_ORDERS' AS TABLE_NAME,
    CAST('Ship_Priority' AS varchar(255)) AS Attribute,
    COUNT(*) AS Total_Records,
   
        SUM(
    CASE
        WHEN Ship_Priority IS NULL OR CAST(Ship_Priority AS VARCHAR(400)) = 'NULL' OR CAST(Ship_Priority AS VARCHAR(400) )= '' THEN 1 ELSE 0
    END) AS  Count_Null_Records,
        SUM(
    CASE
        WHEN CAST(Ship_Priority AS VARCHAR(400))= '0' THEN 1 ELSE 0
    END) AS  ZeroCount,
        COUNT(DISTINCT Ship_Priority) AS  Count_Distinct_Records,
        COUNT(Ship_Priority) - COUNT(DISTINCT Ship_Priority)  AS  Count_Duplicates,
        MAX(LENGTH(CAST(Ship_Priority AS VARCHAR(400)))) AS  Max_Length,
        MIN(LENGTH(CAST(Ship_Priority AS VARCHAR(400)))) AS  Min_Length
    FROM RK250076.STG_AWS_ORDERS
    UNION ALL
    SELECT cast(10 as integer) sno,'RK250076.STG_AWS_ORDERS' AS TABLE_NAME,
    CAST('Order_Comment' AS varchar(255)) AS Attribute,
    COUNT(*) AS Total_Records,
   
        SUM(
    CASE
        WHEN Order_Comment IS NULL OR CAST(Order_Comment AS VARCHAR(400)) = 'NULL' OR CAST(Order_Comment AS VARCHAR(400) )= '' THEN 1 ELSE 0
    END) AS  Count_Null_Records,
        SUM(
    CASE
        WHEN CAST(Order_Comment AS VARCHAR(400))= '0' THEN 1 ELSE 0
    END) AS  ZeroCount,
        COUNT(DISTINCT Order_Comment) AS  Count_Distinct_Records,
        COUNT(Order_Comment) - COUNT(DISTINCT Order_Comment)  AS  Count_Duplicates,
        MAX(LENGTH(CAST(Order_Comment AS VARCHAR(400)))) AS  Max_Length,
        MIN(LENGTH(CAST(Order_Comment AS VARCHAR(400)))) AS  Min_Length
    FROM RK250076.STG_AWS_ORDERS
    UNION ALL
    
SELECT cast(11 as integer) sno,'RK250076.STG_AWS_ORDERS' AS TABLE_NAME,
    CAST('Order_Qty' AS varchar(255)) AS Attribute,
    COUNT(*) AS Total_Records,
   
        SUM(
    CASE
        WHEN Order_Qty IS NULL OR CAST(Order_Qty AS VARCHAR(400)) = 'NULL' OR CAST(Order_Qty AS VARCHAR(400) )= '' THEN 1 ELSE 0
    END) AS  Count_Null_Records,
        SUM(
    CASE
        WHEN CAST(Order_Qty AS VARCHAR(400))= '0' THEN 1 ELSE 0
    END) AS  ZeroCount,
        COUNT(DISTINCT Order_Qty) AS  Count_Distinct_Records,
        COUNT(Order_Qty) - COUNT(DISTINCT Order_Qty)  AS  Count_Duplicates,
        MAX(LENGTH(CAST(Order_Qty AS VARCHAR(400)))) AS  Max_Length,
        MIN(LENGTH(CAST(Order_Qty AS VARCHAR(400)))) AS  Min_Length
    FROM RK250076.STG_AWS_ORDERS
    UNION ALL 
SELECT cast(12 as integer) sno,'RK250076.STG_AWS_ORDERS' AS TABLE_NAME,
    CAST('Product_Id' AS varchar(255)) AS Attribute,
    COUNT(*) AS Total_Records,
   
        SUM(
    CASE
        WHEN Product_Id IS NULL OR CAST(Product_Id AS VARCHAR(400)) = 'NULL' OR CAST(Product_Id AS VARCHAR(400) )= '' THEN 1 ELSE 0
    END) AS  Count_Null_Records,
        SUM(
    CASE
        WHEN CAST(Product_Id AS VARCHAR(400))= '0' THEN 1 ELSE 0
    END) AS  ZeroCount,
        COUNT(DISTINCT Product_Id) AS  Count_Distinct_Records,
        COUNT(Product_Id) - COUNT(DISTINCT Product_Id)  AS  Count_Duplicates,
        MAX(LENGTH(CAST(Product_Id AS VARCHAR(400)))) AS  Max_Length,
        MIN(LENGTH(CAST(Product_Id AS VARCHAR(400)))) AS  Min_Length
    FROM RK250076.STG_AWS_ORDERS
    UNION ALL
    SELECT cast(13 as integer) sno,'RK250076.STG_AWS_ORDERS' AS TABLE_NAME,
    CAST('Discount' AS varchar(255)) AS Attribute,
    COUNT(*) AS Total_Records,
   
        SUM(
    CASE
        WHEN Discount IS NULL OR CAST(Discount AS VARCHAR(400)) = 'NULL' OR CAST(Discount AS VARCHAR(400) )= '' THEN 1 ELSE 0
    END) AS  Count_Null_Records,
        SUM(
    CASE
        WHEN CAST(Discount AS VARCHAR(400))= '0' THEN 1 ELSE 0
    END) AS  ZeroCount,
        COUNT(DISTINCT Discount) AS  Count_Distinct_Records,
        COUNT(case when Discount  is null then 99999999 else Discount end) - COUNT(DISTINCT Discount)  AS  Count_Duplicates,
      MAX(LENGTH(CAST(coalesce(Discount,'NaN') AS VARCHAR(400)))) AS  Max_Length,
        MIN(LENGTH(CAST(coalesce(Discount,'NaN') AS VARCHAR(400)))) AS  Min_Length
    FROM RK250076.STG_AWS_ORDERS