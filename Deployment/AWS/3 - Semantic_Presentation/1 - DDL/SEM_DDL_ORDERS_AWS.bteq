.LOGMECH LDAP
.LOGON tdprd.td.teradata.com/$tdwallet(itp_td_usr),$tdwallet(itp_td_pass);


-------SEMANTIC TABLE-----------------


CREATE MULTISET TABLE RK250076.SEM_AWS_ORDERS ,FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT,
     DEFAULT MERGEBLOCKRATIO,
     MAP = TD_MAP1
     (
      Order_Id INTEGER NOT NULL,
      Cust_Id INTEGER NOT NULL,
      Order_Status VARCHAR(5) CHARACTER SET LATIN CASESPECIFIC,
      Total_Price DECIMAL(10,2),
      Order_Date DATE FORMAT 'YYYY-MM-DD',
      Order_Priority INTEGER COMPRESS 10 ,
      Clerk VARCHAR(50) CHARACTER SET LATIN CASESPECIFIC,
      First_Name VARCHAR(50) CHARACTER SET LATIN CASESPECIFIC,
      Last_Name VARCHAR(50) CHARACTER SET LATIN CASESPECIFIC,
      Store_Id INTEGER,
      Ship_Priority INTEGER COMPRESS (1 ,2 ,3 ,4 ,5 ),
      Order_Comment VARCHAR(20) CHARACTER SET LATIN CASESPECIFIC COMPRESS 'In Stock',
      Order_Qty INTEGER,
      Product_Id INTEGER,
      Discount DECIMAL(10,2),
      Discount_Percent DECIMAL(10,2),
      SOURCE_SYSTEM VARCHAR(6) CHARACTER SET LATIN CASESPECIFIC NOT NULL,
      LOAD_DTTM TIMESTAMP(0) NOT NULL, 
PRIMARY KEY ( Order_Id ))
PRIMARY INDEX ( Order_Id )
PARTITION BY ( RANGE_N(STORE_ID  BETWEEN 1  AND 100  EACH 1 ),
RANGE_N(ORDER_DATE  BETWEEN '2015-01-01' AND '2023-12-31' EACH INTERVAL '1' DAY ) );


CREATE MULTISET TABLE RK250076.SEM_NOS_AWS_ORDERS ,FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT,
     DEFAULT MERGEBLOCKRATIO,
     MAP = TD_MAP1
     (
      LOCATION VARCHAR(2048) CHARACTER SET UNICODE CASESPECIFIC NOT NULL,
      THEYEAR INTEGER NOT NULL,
      THEMONTH INTEGER,
      SALES_DATE DATE FORMAT 'YYYY/MM/DD',
      CUSTOMER_ID INTEGER NOT NULL,
      STORE_ID INTEGER,
      BASKET_ID INTEGER,
      PRODUCT_ID INTEGER,
      SALES_QUANTITY INTEGER,
      DISCOUNT_AMOUNT FLOAT,
      SOURCE_SYSTEM VARCHAR(6) CHARACTER SET LATIN CASESPECIFIC NOT NULL,
      LOAD_DTTM TIMESTAMP(0) NOT NULL, 
PRIMARY KEY ( CUSTOMER_ID ))
PRIMARY INDEX ( CUSTOMER_ID );


------------------------------------Semantic Views----------------


---- QRDER_QTY BY CUSTOMER_ID ----
REPLACE VIEW AR186005.SEM_ORDER_QTY_BY_CUSTOMER_ID_VW (CUSTOMER_ID, ORDER_SALES_DATE, ORDER_SALES_QUANTITY, SOURCE_SYSTEM) AS 
SEL CUST_ID, ORDER_DATE, SUM(ORDER_QTY) AS CURRENT_ORDER_QTY, 'ORDERS_ONETIME' AS SOURCE_SYSTEM FROM AR186005.SEM_AWS_ORDERS GROUP BY CUST_ID, ORDER_DATE
UNION ALL
SEL CUSTOMER_ID, SALES_DATE AS HISTORIC_SALES_DATE, SUM(SALES_QUANTITY) AS HISTORIC_SALES_QUANTITY, 'NOS_DATA' AS SOURCE_SYSTEM FROM AR186005.SEM_NOS_AWS_ORDERS@TDPRD2_FS GROUP BY CUSTOMER_ID, SALES_DATE;




---- QRDER_QTY BY STORE_ID ----
REPLACE VIEW AR186005.SEM_ORDER_QTY_BY_STORE_ID_VW (STORE_ID, ORDER_SALES_DATE, ORDER_SALES_QUANTITY, SOURCE_SYSTEM) AS 
SEL STORE_ID, ORDER_DATE, SUM(ORDER_QTY) AS CURRENT_ORDER_QTY, 'ORDERS_ONETIME' AS SOURCE_SYSTEM FROM AR186005.SEM_AWS_ORDERS GROUP BY STORE_ID, ORDER_DATE
UNION ALL
SEL STORE_ID, SALES_DATE AS HISTORIC_SALES_DATE, SUM(SALES_QUANTITY) AS HISTORIC_SALES_QUANTITY, 'NOS_DATA' AS SOURCE_SYSTEM FROM AR186005.SEM_NOS_AWS_ORDERS@TDPRD2_FS GROUP BY STORE_ID, SALES_DATE;




---- QRDER_QTY BY CUSTOMER_ID, STORE_ID ----
REPLACE VIEW AR186005.SEM_ORDER_QTY_BY_CUSTOMER_STORE_ID_VW (CUSTOMER_ID, STORE_ID, ORDER_SALES_DATE, ORDER_SALES_QUANTITY, SOURCE_SYSTEM) AS 
SEL CUST_ID, STORE_ID, ORDER_DATE, SUM(ORDER_QTY) AS CURRENT_ORDER_QTY, 'ORDERS_ONETIME' AS SOURCE_SYSTEM FROM AR186005.SEM_AWS_ORDERS GROUP BY CUST_ID, STORE_ID, ORDER_DATE
UNION ALL
SEL CUSTOMER_ID, STORE_ID, SALES_DATE AS HISTORIC_SALES_DATE, SUM(SALES_QUANTITY) AS HISTORIC_SALES_QUANTITY, 'NOS_DATA' AS SOURCE_SYSTEM FROM AR186005.SEM_NOS_AWS_ORDERS@TDPRD2_FS 
GROUP BY CUSTOMER_ID, STORE_ID, SALES_DATE;




.LOGOFF 
PAUSE



10:39 PM 9/18/2024
